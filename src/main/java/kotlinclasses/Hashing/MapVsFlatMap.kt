/*
 * *
 *  * MapVsFlatMap.kt
 *  * Created by Rafsan Ahmad on 3/15/25, 7:51PM
 *  * Copyright (c) 2025 . All rights reserved.
 *  *
 *
 */

package kotlinclasses.Hashing

import java.util.*
import java.util.stream.Collectors

class MapVsFlatMap {
    fun mapVsFlatmap() {
        //Map vs Flatmap
        // making the array list object
        val fruit = ArrayList<String>()
        fruit.add("Apple")
        fruit.add("mango")
        fruit.add("pineapple")
        fruit.add("kiwi")
        println("List of fruit-$fruit")

        // lets use map() to convert list of fruit
        val list: List<*> = fruit.stream()
            .map { s: String -> s.length }
            .collect(Collectors.toList())
        println("List generated by map-$list")

        //Flatmap
        // making the arraylist object of List of Integer
        val number: MutableList<List<Int>> = ArrayList()
        // adding the elements to number arraylist
        number.add(Arrays.asList(1, 2))
        number.add(Arrays.asList(3, 4))
        number.add(Arrays.asList(5, 6))
        number.add(Arrays.asList(7, 8))
        println("List of list-$number")

        // using flatmap() to flatten this list
        val flatList = number.stream()
            .flatMap { list: List<Int> -> list.stream() }
            .collect(Collectors.toList())
        // printing the list
        println("List generate by flatMap-" + flatList)
    }
}

fun main(args: Array<String>) {
    val obj = MapVsFlatMap()
    obj.mapVsFlatmap()
}